///
Defines all warnings and errors that can happen during compilation of Chalk.

All errors should contain an example of correct code, or code that causes the
error, preferrably both, and an explanation of why it happens and what it means.

TODO: autofixes? they can be autogenerated for spaces, but for other code,
that could have bad consequences - autoremoval of TODO from comments, "fixes"
of code that change the code as little as possible to be error-free, but not
logic-free, etc
///

import { Error } from "sdl/regex.chalk";

export class Errors : Enum {
  MEMD(
    "documentation",
    "missing or empty module documentation",
    """
    Module documentation is missing or empty. Please add a description
    of the module.
    
    Example of a documented module:
    
    ```
    ///
    This is module documentation. MEMD means this comment is missing.
    This module exports a function that returns "Hello, world!".
    ///
    
    // Returns "Hello, world!"
    export String hello() { return "Hello, world!" }
    ```
    """,
  ),
  EC(
    "suspicious",
    "empty class",
    """
    Empty class cannot do anything, it is probably unfinished or redundant.
    
    Example of an empty class:
    
    ```
    class X {}
    ```
    
    Try adding some members to the class:
    
    ```
    class X {
      Int i;
      
      new(Int _i);
      
      pub getI() { return i }
    }
    ```
    """
  ),
  TODO(
    "suspicious",
    "TODO found in a comment",
    """
    "TODO" is often found in code to signal that the code is unfinished.
    
    Example:
    
    ```
    Null foo() {
      // TODO empty
    }
    ```
    
    You can leave the TODO in place while working on something else and finish
    the code later.
    """
  ),
  FATD(
    "style",
    "field after type declaration",
    """
    In a class, fields (member variables) should be defined before member types
    (classes, traits and functions).
    
    Example (wrong):
    
    ```
    class A {
      class B {
        Null foo();
      }
      
      // This variable should be defined before declaration of the class B
      Int i;
    }
    ```
    
    Example (correct):
    
    ```
    class A {
      // This is also a field (of type *class*).
      class C;
      
      Int i;
      
      class B {
        Null foo();
      }
    }
    ```
    """
  ),
  UM(
    "error",
    "unsupported magic",
    """
    The `[[magic]]` literal can only be used in a few parts of the standard
    library, and cannot be used in most code.
    """
  );
  
  pub String id;
  pub String category;
  pub String short;
  pub String long;
  
  new({ String _category, String _short, String _long }) {}
};

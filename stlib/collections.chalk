/**
 * Containers.
**/

import { Stream } from "std/stream.chalk";

export trait Collection<T> : Stream {
  Self<T> merge(Self<T>, Bool overwrite = false);
  
  static Self<T> merge(Self<T>, Self<T>);
}

export trait Set {
  
}

export class HashSet {
  
}

export trait Map<class K, class V> {
  get(K) immut;
  
  get(K, V) mut;
}

export class HashMap<class K, class V> {
  
}

export class TreeMap<class K, class V> {
  
}
